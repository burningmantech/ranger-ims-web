# Docs:
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions

name: CI/CD

on: [push]

jobs:
  unit:
    name: Unit Tests

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.13.1

      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build

      - name: Run unit tests
        run: npm test -- --ci --watchAll=false --coverage

      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v3.0.0
        with:
          files: coverage/coverage-final.json
          env_vars: GITHUB_REF,GITHUB_COMMIT,GITHUB_USER,GITHUB_WORKFLOW
          fail_ci_if_error: true
          verbose: true
        env:
          GITHUB_REF: ${{ github.ref }}
          GITHUB_COMMIT: ${{ github.sha }}
          GITHUB_USER: ${{ github.actor }}
          GITHUB_WORKFLOW: ${{ github.workflow }}

  docker:
    name: Build Docker image

    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: ./bin/build;

      - name: Save Docker image
        run: |
          mkdir images;
          docker image save ranger-ims-web:dev | gzip -6 > images/web.tgz;

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: images
          path: images

  test-docker:
    name: Test Docker image

    needs: [docker]

    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Download Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: images
          path: images

      - name: Load Docker image
        run: gzip --uncompress --stdout images/web.tgz | docker image load;

      - name: Test Docker image
        run: ./bin/test_docker;
